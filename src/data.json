{"7.14": {"string": "1.0:7.14:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Right child node has correct height after a left rotation removal"}, "7.15": {"string": "1.0:7.15:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Right child node has correct balance factor after a left rotation removal"}, "7.16": {"string": "1.0:7.16:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left-right child node has correct height after a left rotation removal"}, "7.17": {"string": "1.0:7.17:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left-right child node has correct balance factor after a left rotation removal"}, "7.10": {"string": "1.0:7.10:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Root node has correct height after a left rotation removal"}, "7.11": {"string": "1.0:7.11:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Root node has correct balance factor after a left rotation removal"}, "7.12": {"string": "1.0:7.12:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left child node has correct height after a left rotation removal"}, "7.13": {"string": "1.0:7.13:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left child node has correct balance factor after a left rotation removal"}, "4.9": {"string": "1.0:4.9:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Right child has correct balance factor"}, "2.6": {"string": "1.0:2.6:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Left child has correct height"}, "4.8": {"string": "1.0:4.8:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Left child has correct balance factor"}, "7.2": {"string": "1.0:7.2:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Root node was set to null on remove"}, "7.3": {"string": "1.0:7.3:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Right child node was set to null on remove"}, "6.5": {"string": "1.0:6.5:[4,1,-1+|[5,0,0+|]]", "desc": "Root node has correct data after remove"}, "7.1": {"string": "1.0:7.1:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Size of AVL should change on remove"}, "7.6": {"string": "1.0:7.6:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Root node data is incorrect after a right rotation removal"}, "7.7": {"string": "1.0:7.7:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left child node data is incorrect after a left rotation removal"}, "7.4": {"string": "1.0:7.4:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left child node was set to null on remove"}, "7.5": {"string": "1.0:7.5:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left-right child node was set to null on remove"}, "7.8": {"string": "1.0:7.8:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Right child node data is incorrect after a left rotation removal"}, "7.9": {"string": "1.0:7.9:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "Left-right child node data is incorrect after a left rotation removal"}, "6.9": {"string": "1.0:6.9:[5,0,0+|]", "desc": "Size of AVL changes on remove"}, "6.8": {"string": "1.0:6.8:[4,1,-1+|[5,0,0+|]]", "desc": "Balance factor of root is updated after a removal"}, "10.1": {"string": "1.0:10.1:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Size of AVL should be 4"}, "10.0": {"string": "1.0:10.0:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "The correct data reference is removed from the tree."}, "10.3": {"string": "1.0:10.3:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Root height is correct after some removals"}, "10.2": {"string": "1.0:10.2:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Root data is correct after some removals"}, "10.5": {"string": "1.0:10.5:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Left child data is correct after some removals"}, "10.4": {"string": "1.0:10.4:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Root balance factor is correct after some removals"}, "10.7": {"string": "1.0:10.7:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Left child balance factor is correct after some removals"}, "10.6": {"string": "1.0:10.6:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Left child height is correct after some removals"}, "10.9": {"string": "1.0:10.9:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Right child height is correct after some removals"}, "10.8": {"string": "1.0:10.8:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Right child data is correct after some removals"}, "1.18": {"string": "1.0:1.18:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Root height is correct"}, "1.19": {"string": "1.0:1.19:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Root balance factor is correct"}, "6.31": {"string": "1.0:6.31:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Right-left-left child has correct data after rotation"}, "6.30": {"string": "1.0:6.30:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Left-left-right child has correct data after rotation"}, "6.33": {"string": "1.0:6.33:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Right-right-right child has correct data after rotation"}, "6.32": {"string": "1.0:6.32:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Right-left-right  child has correct data after rotation"}, "16.2": {"string": "1.0:16.2:", "desc": "clear() correctly sets the size to 0."}, "16.1": {"string": "1.0:16.1:", "desc": "clear() correctly sets the root to null."}, "9.14": {"string": "1.0:9.14:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Root node has correct balance factor after a left rotation removal"}, "2.10": {"string": "1.0:2.10:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "AVL updates size after add operation"}, "9.12": {"string": "1.0:9.12:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right-left child node data is incorrect after a left rotation removal"}, "1.8": {"string": "1.0:1.8:[5,1,1+[4,0,0+|]|]", "desc": "Root balance factor is correct"}, "9.13": {"string": "1.0:9.13:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Root node has correct height after a left rotation removal"}, "9.10": {"string": "1.0:9.10:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Left child node data is incorrect after a left rotation removal"}, "9.11": {"string": "1.0:9.11:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right child node data is incorrect after a left rotation removal"}, "6.7": {"string": "1.0:6.7:[4,1,-1+|[5,0,0+|]]", "desc": "Root retains correct height after removal of one child"}, "7.0.1": {"string": "1.0:7.0.1:[15,2,1+[5,1,-1+|[10,0,0+|]]|[20,0,0+|]]", "desc": "The correct integer reference is returned on remove."}, "12.2": {"string": "1.0:12.2:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(1) correctly returns true"}, "12.1": {"string": "1.0:12.1:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(0) correctly returns true"}, "6.4": {"string": "1.0:6.4:[4,1,-1+|[5,0,0+|]]", "desc": "Right child node was set to null on remove"}, "6.3": {"string": "1.0:6.3:[4,1,-1+|[5,0,0+|]]", "desc": "Root node was set to null on remove"}, "6.2": {"string": "1.0:6.2:[4,1,-1+|[5,0,0+|]]", "desc": "Parent node's reference to removed node is updated to null"}, "6.1": {"string": "1.0:6.1:[4,1,-1+|[5,0,0+|]]", "desc": "Size of AVL changes on remove"}, "6.28": {"string": "1.0:6.28:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Right right child has correct data after rotation"}, "12.4": {"string": "1.0:12.4:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(3) correctly returns true"}, "3.6": {"string": "1.0:3.6:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Left child has correct height"}, "3.7": {"string": "1.0:3.7:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Right child has correct height"}, "3.4": {"string": "1.0:3.4:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Root has correct height"}, "3.5": {"string": "1.0:3.5:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Root has correct balance factor"}, "3.2": {"string": "1.0:3.2:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Left child has correct data after right rotation"}, "3.3": {"string": "1.0:3.3:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Right child has correct data after right rotation"}, "3.1": {"string": "1.0:3.1:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "New root node has incorrect data after right rotation"}, "2.3": {"string": "1.0:2.3:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Right child has correct data after right rotation"}, "2.2": {"string": "1.0:2.2:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Left child has correct data after right rotation"}, "2.1": {"string": "1.0:2.1:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "New root node has incorrect data after right rotation"}, "2.7": {"string": "1.0:2.7:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Right child has correct height"}, "12.9": {"string": "1.0:12.9:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(8) correctly returns true"}, "3.8": {"string": "1.0:3.8:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Left child has correct balance factor"}, "3.9": {"string": "1.0:3.9:[6,1,0+[5,0,0+|]|[7,0,0+|]]", "desc": "Right child has correct balance factor"}, "12.8": {"string": "1.0:12.8:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(7) correctly returns true"}, "6.29": {"string": "1.0:6.29:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Left-left-left has correct data after rotation"}, "15.1000": {"string": "1.0:15.1000:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "All exceptions thrown must have messages."}, "4.1": {"string": "1.0:4.1:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "New root node has incorrect data after right-left rotation"}, "1.16": {"string": "1.0:1.16:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Left child has correct data"}, "9.21": {"string": "1.0:9.21:[8,1,0+[5,0,0+|]|[14,0,0+|]]", "desc": "Right child was not updated after removal"}, "9.20": {"string": "1.0:9.20:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right-left child node has correct balance factor after a left rotation removal"}, "1.17": {"string": "1.0:1.17:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Right child has correct data"}, "1.14": {"string": "1.0:1.14:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Root balance factor is correct"}, "1.15": {"string": "1.0:1.15:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Left and right children exist"}, "1.12": {"string": "1.0:1.12:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Duplicates should not be added to the AVL."}, "12.5": {"string": "1.0:12.5:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(4) correctly returns true"}, "1.13": {"string": "1.0:1.13:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Root height is correct"}, "1.10": {"string": "1.0:1.10:[5,1,-1+|[6,0,0+|]]", "desc": "Root balance factor is correct"}, "6.13.1": {"string": "1.0:6.13.1:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[60,1,0+[55,0,0+|]|[65,0,0+|]]]", "desc": "A node was set to null during the add operation (root)"}, "6.13.2": {"string": "1.0:6.13.2:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[60,1,0+[55,0,0+|]|[65,0,0+|]]]", "desc": "A node was set to null during the add operation (left)"}, "6.13.3": {"string": "1.0:6.13.3:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[60,1,0+[55,0,0+|]|[65,0,0+|]]]", "desc": "A node was set to null during the add operation (right)"}, "6.13.4": {"string": "1.0:6.13.4:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[60,1,0+[55,0,0+|]|[65,0,0+|]]]", "desc": "A node was set to null during the add operation (left-left)"}, "6.13.5": {"string": "1.0:6.13.5:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[60,1,0+[55,0,0+|]|[65,0,0+|]]]", "desc": "A node was set to null during the add operation (left-right)"}, "6.13.6": {"string": "1.0:6.13.6:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[60,1,0+[55,0,0+|]|[65,0,0+|]]]", "desc": "A node was set to null during the add operation (right-right)"}, "12.3": {"string": "1.0:12.3:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(2) correctly returns true"}, "6.27": {"string": "1.0:6.27:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Right right child has correct data after rotation"}, "9.18": {"string": "1.0:9.18:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right child node has correct balance factor after a left rotation removal"}, "9.19": {"string": "1.0:9.19:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right-left child node has correct height after a left rotation removal"}, "9.16": {"string": "1.0:9.16:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Left child node has correct balance factor after a left rotation removal"}, "9.17": {"string": "1.0:9.17:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right child node has correct height after a left rotation removal"}, "11.14": {"string": "1.0:11.14:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 70 in the tree."}, "9.15": {"string": "1.0:9.15:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Left child node has correct height after a left rotation removal"}, "11.12": {"string": "1.0:11.12:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(11) correctly returns false"}, "11.13": {"string": "1.0:11.13:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 65 in the tree."}, "11.10": {"string": "1.0:11.10:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 50 in the tree."}, "11.11": {"string": "1.0:11.11:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 55 in the tree."}, "6.6": {"string": "1.0:6.6:[4,1,-1+|[5,0,0+|]]", "desc": "Right child has correct data after remove"}, "9.8": {"string": "1.0:9.8:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right-left child node was set to null on remove"}, "9.9": {"string": "1.0:9.9:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Root node data is incorrect after a right rotation removal"}, "9.4": {"string": "1.0:9.4:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Left child node was set to null on remove"}, "9.5": {"string": "1.0:9.5:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Left-right child node should be null after this operation"}, "9.6": {"string": "1.0:9.6:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Left-left child node should be null after this rotation"}, "9.7": {"string": "1.0:9.7:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right child node was set to null on remove"}, "9.0": {"string": "1.0:9.0:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "The correct integer reference is returned on remove"}, "9.1": {"string": "1.0:9.1:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Size of AVL should change on remove"}, "9.2": {"string": "1.0:9.2:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Root node was set to null on remove"}, "6.34": {"string": "1.0:6.34:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "AVL updates size after add operation"}, "6.19": {"string": "1.0:6.19:[5,1,1+[3,0,0+|]|]", "desc": "Removed nodes with two children should be replaced with its successor"}, "6.18": {"string": "1.0:6.18:[5,1,1+[3,0,0+|]|]", "desc": "Root node does not become null after its removal if it has children"}, "6.13": {"string": "1.0:6.13:[5,0,0+|]", "desc": "Root node has correct data after remove"}, "6.12": {"string": "1.0:6.12:[5,0,0+|]", "desc": "Root node was set to null on remove"}, "6.11": {"string": "1.0:6.11:[5,0,0+|]", "desc": "Parent node's reference to removed node is updated to null (right)"}, "6.10": {"string": "1.0:6.10:[5,0,0+|]", "desc": "Parent node's reference to removed node is updated to null (left)"}, "6.17": {"string": "1.0:6.17:", "desc": "Root node is AVL is set to null when AVL becomes empty"}, "6.16": {"string": "1.0:6.16:", "desc": "Size of AVL changes on remove"}, "6.15": {"string": "1.0:6.15:[5,0,0+|]", "desc": "Balance factor of root is updated after a removal"}, "6.14": {"string": "1.0:6.14:[5,0,0+|]", "desc": "Root's height is updated after a that changes it"}, "10.11": {"string": "1.0:10.11:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Left-left child data is correct after some removals"}, "10.10": {"string": "1.0:10.10:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Right child balance factor is correct after some removals"}, "10.13": {"string": "1.0:10.13:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Left-left child balance factor is correct after some removals"}, "10.12": {"string": "1.0:10.12:[646,2,1+[526,1,1+[386,0,0+|]|]|[856,0,0+|]]", "desc": "Left-left child height is correct after some removals"}, "2.9": {"string": "1.0:2.9:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Right child has correct balance factor"}, "12.7": {"string": "1.0:12.7:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(6) correctly returns true"}, "2.8": {"string": "1.0:2.8:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Left child has correct balance factor"}, "9.3": {"string": "1.0:9.3:[8,2,-1+[5,0,0+|]|[16,1,1+[14,0,0+|]|]]", "desc": "Right child node was set to null on remove"}, "1.4": {"string": "1.0:1.4:[5,0,0+|]", "desc": "Root data is correct"}, "1.5": {"string": "1.0:1.5:[5,0,0+|]", "desc": "Root height is correct"}, "1.6": {"string": "1.0:1.6:[5,0,0+|]", "desc": "Root balance factor is correct"}, "1.7": {"string": "1.0:1.7:[5,1,1+[4,0,0+|]|]", "desc": "Root height is correct"}, "1.1": {"string": "1.0:1.1:[5,0,0+|]", "desc": "Root node exists"}, "1.2": {"string": "1.0:1.2:[5,0,0+|]", "desc": "Root data"}, "1.3": {"string": "1.0:1.3:[5,0,0+|]", "desc": "Size is updated after an add"}, "12.6": {"string": "1.0:12.6:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(5) correctly returns true"}, "1.9": {"string": "1.0:1.9:[5,1,-1+|[6,0,0+|]]", "desc": "Root height is correct"}, "1.11": {"string": "1.0:1.11:[5,1,0+[3,0,0+|]|[6,0,0+|]]", "desc": "Size is updated after an add."}, "4.5": {"string": "1.0:4.5:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Root has correct balance factor"}, "5.1": {"string": "1.0:5.1:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "New root node has incorrect data after left-right rotation"}, "5.2": {"string": "1.0:5.2:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Left child has correct data after left-right rotation"}, "5.3": {"string": "1.0:5.3:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Right child has correct data after left-right rotation"}, "5.4": {"string": "1.0:5.4:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Root has correct height"}, "5.5": {"string": "1.0:5.5:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Root has correct balance factor"}, "5.6": {"string": "1.0:5.6:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Left child has correct height"}, "5.7": {"string": "1.0:5.7:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Right child has correct height"}, "5.8": {"string": "1.0:5.8:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Left child has correct balance factor"}, "5.9": {"string": "1.0:5.9:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Right child has correct balance factor"}, "11.6": {"string": "1.0:11.6:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 30 in the tree."}, "11.7": {"string": "1.0:11.7:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 35 in the tree."}, "11.0": {"string": "1.0:11.0:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 0 in the tree."}, "11.1": {"string": "1.0:11.1:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 5 in the tree."}, "11.2": {"string": "1.0:11.2:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 10 in the tree."}, "11.3": {"string": "1.0:11.3:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 15 in the tree."}, "2.5": {"string": "1.0:2.5:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Root has correct balance factor"}, "6.21": {"string": "1.0:6.21:[5,1,1+[3,0,0+|]|]", "desc": "Right child node should be null after replacing its parent"}, "2.4": {"string": "1.0:2.4:[4,1,0+[3,0,0+|]|[5,0,0+|]]", "desc": "Root has correct height"}, "4.4": {"string": "1.0:4.4:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Root has correct height"}, "12.10": {"string": "1.0:12.10:[3,3,-1+[1,1,0+[0,0,0+|]|[2,0,0+|]]|[7,2,0+[5,1,0+[4,0,0+|]|[6,0,0+|]]|[8,1,-1+|[9,0,0+|]]]]", "desc": "AVL.contains(9) correctly returns true"}, "4.7": {"string": "1.0:4.7:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Right child has correct height"}, "6.21.3": {"string": "1.0:6.21.3:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "A node was set to null during the add operation (right)"}, "6.21.2": {"string": "1.0:6.21.2:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "A node was set to null during the add operation (left)"}, "6.21.1": {"string": "1.0:6.21.1:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "A node was set to null during the add operation (root)"}, "4.6": {"string": "1.0:4.6:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Left child has correct height"}, "6.21.6": {"string": "1.0:6.21.6:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "A node was set to null during the add operation (right-right-right)"}, "6.21.5": {"string": "1.0:6.21.5:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "A node was set to null during the add operation (left-right)"}, "6.21.4": {"string": "1.0:6.21.4:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "A node was set to null during the add operation (left-left)"}, "11.8": {"string": "1.0:11.8:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 40 in the tree."}, "11.9": {"string": "1.0:11.9:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 45 in the tree."}, "4.3": {"string": "1.0:4.3:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Right child has correct data after right-left rotation"}, "4.2": {"string": "1.0:4.2:[7,1,0+[5,0,0+|]|[10,0,0+|]]", "desc": "Left child has correct data after right-left rotation"}, "6.26": {"string": "1.0:6.26:[45,3,0+[40,2,1+[30,1,0+[25,0,0+|]|[35,0,0+|]]|[42,0,0+|]]|[63,2,0+[60,1,0+[55,0,0+|]|[62,0,0+|]]|[65,1,-1+|[67,0,0+|]]]]", "desc": "Left right child has correct data after rotation"}, "11.4": {"string": "1.0:11.4:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 20 in the tree."}, "6.24": {"string": "1.0:6.24:[5,1,1+[3,0,0+|]|]", "desc": "Root node has updated height after removal"}, "6.25": {"string": "1.0:6.25:[5,1,1+[3,0,0+|]|]", "desc": "Root node has updated balance factor after removal"}, "6.22": {"string": "1.0:6.22:[5,1,1+[3,0,0+|]|]", "desc": "Left child node should not be null after removal"}, "6.23": {"string": "1.0:6.23:[5,1,1+[3,0,0+|]|]", "desc": "Left child node has correct data after removal"}, "6.20": {"string": "1.0:6.20:[5,1,1+[3,0,0+|]|]", "desc": "Root node removed with children has incorrect data"}, "11.5": {"string": "1.0:11.5:[35,3,0+[15,2,0+[5,1,0+[0,0,0+|]|[10,0,0+|]]|[25,1,0+[20,0,0+|]|[30,0,0+|]]]|[55,2,0+[45,1,0+[40,0,0+|]|[50,0,0+|]]|[65,1,0+[60,0,0+|]|[70,0,0+|]]]]", "desc": "AVL finds datum 25 in the tree."}, "6.6.5": {"string": "1.0:6.6.5:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[55,1,-1+|[60,0,0+|]]]", "desc": "A node was set to null during the add operation (left-right)"}, "6.6.4": {"string": "1.0:6.6.4:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[55,1,-1+|[60,0,0+|]]]", "desc": "A node was set to null during the add operation (left-left)"}, "6.6.6": {"string": "1.0:6.6.6:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[55,1,-1+|[60,0,0+|]]]", "desc": "A node was set to null during the add operation (right-right)"}, "6.6.1": {"string": "1.0:6.6.1:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[55,1,-1+|[60,0,0+|]]]", "desc": "A node was set to null during the add operation (root)"}, "6.6.3": {"string": "1.0:6.6.3:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[55,1,-1+|[60,0,0+|]]]", "desc": "A node was set to null during the add operation (right)"}, "6.6.2": {"string": "1.0:6.6.2:[45,2,0+[40,1,0+[35,0,0+|]|[42,0,0+|]]|[55,1,-1+|[60,0,0+|]]]", "desc": "A node was set to null during the add operation (left)"}}